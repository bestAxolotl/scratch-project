const db = require('./database');

const eventController = {};


//---------- Welcome / Search Page Routes -------

//----Search activities controller:Â 

//SEARCH: Activities Table
//SEARCH PARAMS: Activity type, location, start time, end time
//RETURN and PRINT: Matching activities; data: Title, Location, Start Time, End Time, Description
// RETURN FOR INTERNAL: User ID 

// SEARCH: Users Table
// ~ SEARCH PARAMS: User id (from Activities Table Search)
// ~ RETURN: Matching profile; Username + Photo

eventController.activitySearch = (req, res) => { 
  res.send("greetings from inside of the activity search controller");
};


//----Activity detail display route, accessable once search is populated

//SEARCH: Activities Table
//SEARCH PARAMS: ActivityID 
//RETURN and PRINT: Matching activities; data: Title, Location, Start Time, End Time, Description
//RETURN: CreatorID + UserIDs

// SEARCH: Messages Table
// SEARCH PARAMS: ActivityID
// RETURN + PRINT: UserName + Messages in order of submit

//SEARCH: USERS Table
//SEARCH PARAMS: ~Creator + UserID(s)
//RETURN + PRINT: Username, photo url

eventController.activityDetailPageDisplay = (req, res) => {
  res.send("greetings from inside of the activityDetailPageDisplay search controller");
};

//---------- Activity Detail Page Routes ---------------


//----Confirm participation + save to profile
//ADD To: Activities Table
//PARAM to ADD: UserID to ____ field
eventController.confirmParticipation = (req, res) => {
  res.send("greetings from inside of the confirmParticipation search controller");

};

//----Save as maybe participating
//ADD To: Activities Table
//PARAM to ADD: UserID to ____ field
eventController.saveAsMaybe = (req, res) => {
  res.send("greetings from inside of the saveAsMaybe controller");
};

//----Submit chat message
//ADD To: Chats Table, search activityID 
//PARAM to ADD: UserID, Username, message, chatID, activitiesID, date and time submitted
//RETURN + PRINT: all username + messages in order of submitted
eventController.submitChatText = (req, res) => {
  res.send("greetings from inside of the submitChatText search controller");
};

///----View event creator or attendee profile route
//SEARCH + PARAMS: Activities Table for UserID => Search Users Table by UserID
//RETURN and PRINT: Matching user; username, photo
eventController.viewProfile = (req, res) => {
  res.send("greetings from inside of the viewProfile search controller");

};

//---------- Create Activity Page Route -----------------

//----Create activity button route
//ADD to ACTIVITIES TABLE
//PARAMS USER ADDS: Title, Description, Location, Start Time, End Time, #Event Photo, 
//PARAMS AUTOGENERATED: ID
//PARAM TO GENERATE: create functionality to autogenerate date and time created to save
eventController.createActivity = (req, res) => {
  res.send("greetings from inside of the createActivity search controller");

};

//----Generate location
//Grab Location
//##Braden to write:
//
//
eventController.generateLatAndLong = (req, res) => {
  res.send("greetings from inside of the generateLatAndLong controller");
};


//---------- Login Page Routes --------------------------

//----Login button route
//SEARCH users TABLE for username 
//hash submitted
//grab hashed password from database
//compare the two passwords
//if found create a JWT and send it to the client, 
//otherwise don't create a JWT, send to client: password is incorrect
eventController.login = (req, res) => {
  res.send("greetings from inside of the login controller");

};

//----Create account button route
//Add data to USER TABLE
//Params to add: 
  //function: grab and convert: date + time
  //function: hash password
  //usergenerated: username, first, last, birthday
  //function: transform birthday to proper date
  //## BRADEN: create a JWT and send it to the client

eventController.createAccount = (req, res) => {
  res.send("greetings from inside of the createAccount controller");

};



module.exports = eventController;